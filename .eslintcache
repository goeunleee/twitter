[{"C:\\gitdata\\twitter\\twitter\\src\\index.js":"1","C:\\gitdata\\twitter\\twitter\\src\\components\\App.js":"2","C:\\gitdata\\twitter\\twitter\\src\\components\\Router.js":"3","C:\\gitdata\\twitter\\twitter\\src\\routes\\Auth.js":"4","C:\\gitdata\\twitter\\twitter\\src\\routes\\Home.js":"5","C:\\gitdata\\twitter\\twitter\\src\\fBase.js":"6","C:\\gitdata\\twitter\\twitter\\src\\components\\Navigation.js":"7","C:\\gitdata\\twitter\\twitter\\src\\routes\\Profile.js":"8","C:\\gitdata\\twitter\\twitter\\src\\components\\Tweet.js":"9"},{"size":210,"mtime":1612316125095,"results":"10","hashOfConfig":"11"},{"size":556,"mtime":1612747400593,"results":"12","hashOfConfig":"11"},{"size":1003,"mtime":1612595728981,"results":"13","hashOfConfig":"11"},{"size":2911,"mtime":1612324451748,"results":"14","hashOfConfig":"11"},{"size":2745,"mtime":1612750095107,"results":"15","hashOfConfig":"11"},{"size":694,"mtime":1612748703588,"results":"16","hashOfConfig":"11"},{"size":312,"mtime":1612325564313,"results":"17","hashOfConfig":"11"},{"size":378,"mtime":1612326106620,"results":"18","hashOfConfig":"11"},{"size":2564,"mtime":1612750816356,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6ntjgl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\gitdata\\twitter\\twitter\\src\\index.js",[],["41","42"],"C:\\gitdata\\twitter\\twitter\\src\\components\\App.js",[],"C:\\gitdata\\twitter\\twitter\\src\\components\\Router.js",[],"C:\\gitdata\\twitter\\twitter\\src\\routes\\Auth.js",[],"C:\\gitdata\\twitter\\twitter\\src\\routes\\Home.js",["43","44"],"import { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Tweet from \"components/Tweet\"\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [tweets, setTweets] = useState([]);\r\n    const [attachment, setAttachment] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\r\n            const tweetArray = snapshot.docs.map(doc =>\r\n                ({ id: doc.id, ...doc.data() }))\r\n            setTweets(tweetArray)\r\n        })\r\n    }, [])\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !=\"\"){\r\n        const attachmentRef =  storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const tweetObj = {\r\n            text : tweet,\r\n            createAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const { target: { files }\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile)\r\n    };\r\n    const onClearAttachment = () => setAttachment(null)\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input value={tweet} onChange={onChange} type=\"text\" placeholder=\"what's on your mind?\" maxLength={120} />\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n                <input type=\"submit\" value=\"tweet\" />\r\n                {attachment && (\r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                    </div>\r\n                )}\r\n\r\n            </form>\r\n\r\n            <div>\r\n                {tweets.map((tweet) => (\r\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","C:\\gitdata\\twitter\\twitter\\src\\fBase.js",[],"C:\\gitdata\\twitter\\twitter\\src\\components\\Navigation.js",[],"C:\\gitdata\\twitter\\twitter\\src\\routes\\Profile.js",["45"],"import { authService } from \"fBase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default () =>{\r\n    const history = useHistory();\r\n    const onLogoutClick = ()=>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    return(\r\n        <>\r\n        <button onClick={onLogoutClick}>log out</button>\r\n        </>\r\n    )\r\n}","C:\\gitdata\\twitter\\twitter\\src\\components\\Tweet.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":22,"column":23,"nodeType":"53","messageId":"54","endLine":22,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":65,"column":25,"nodeType":"57","endLine":65,"endColumn":76},{"ruleId":"58","severity":1,"message":"59","line":5,"column":1,"nodeType":"60","endLine":16,"endColumn":2},{"ruleId":"55","severity":1,"message":"56","line":51,"column":57,"nodeType":"57","endLine":51,"endColumn":119},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]