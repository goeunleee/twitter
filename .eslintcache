[{"C:\\gitdata\\twitter\\twitter\\src\\index.js":"1","C:\\gitdata\\twitter\\twitter\\src\\components\\App.js":"2","C:\\gitdata\\twitter\\twitter\\src\\components\\Router.js":"3","C:\\gitdata\\twitter\\twitter\\src\\routes\\Auth.js":"4","C:\\gitdata\\twitter\\twitter\\src\\routes\\Home.js":"5","C:\\gitdata\\twitter\\twitter\\src\\fBase.js":"6","C:\\gitdata\\twitter\\twitter\\src\\components\\Navigation.js":"7","C:\\gitdata\\twitter\\twitter\\src\\routes\\Profile.js":"8","C:\\gitdata\\twitter\\twitter\\src\\components\\Tweet.js":"9","C:\\gitdata\\twitter\\twitter\\src\\components\\TweetFactory.js":"10","C:\\gitdata\\twitter\\twitter\\src\\components\\AuthForm.js":"11"},{"size":232,"mtime":1612925861243,"results":"12","hashOfConfig":"13"},{"size":1019,"mtime":1612922162116,"results":"14","hashOfConfig":"13"},{"size":1446,"mtime":1612927051117,"results":"15","hashOfConfig":"13"},{"size":1589,"mtime":1612927191668,"results":"16","hashOfConfig":"13"},{"size":959,"mtime":1612927235278,"results":"17","hashOfConfig":"13"},{"size":694,"mtime":1612748703588,"results":"18","hashOfConfig":"13"},{"size":1397,"mtime":1612926187932,"results":"19","hashOfConfig":"13"},{"size":2020,"mtime":1612927375413,"results":"20","hashOfConfig":"13"},{"size":2750,"mtime":1612926745193,"results":"21","hashOfConfig":"13"},{"size":3351,"mtime":1612927005700,"results":"22","hashOfConfig":"13"},{"size":2270,"mtime":1612926111818,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ude35w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\gitdata\\twitter\\twitter\\src\\index.js",[],["51","52"],"C:\\gitdata\\twitter\\twitter\\src\\components\\App.js",[],"C:\\gitdata\\twitter\\twitter\\src\\components\\Router.js",[],"C:\\gitdata\\twitter\\twitter\\src\\routes\\Auth.js",[],"C:\\gitdata\\twitter\\twitter\\src\\routes\\Home.js",["53","54"],"import { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Tweet from \"components/Tweet\"\r\nimport TweetFactory from \"components/TweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\r\n            const tweetArray = snapshot.docs.map(doc =>\r\n                ({ id: doc.id, ...doc.data() }))\r\n            setTweets(tweetArray)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TweetFactory userObj={userObj} />\r\n\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map((tweet) => (\r\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","C:\\gitdata\\twitter\\twitter\\src\\fBase.js",[],"C:\\gitdata\\twitter\\twitter\\src\\components\\Navigation.js",[],"C:\\gitdata\\twitter\\twitter\\src\\routes\\Profile.js",["55","56"],"import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n\r\n    };\r\n    const getMyTweets = async () => {\r\n        const tweets = await dbService\r\n            .collection(\"tweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(tweets.docs.map((doc) => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyTweets();\r\n    }, [])\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n                Log Out\r\n      </span>\r\n        </div>\r\n    )\r\n}","C:\\gitdata\\twitter\\twitter\\src\\components\\Tweet.js",["57"],"import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text: newTweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewTweet(value);\r\n    };\r\n    return (\r\n        <div className=\"tweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your tweet\"\r\n                            value={newTweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n          </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{tweetObj.text}</h4>\r\n                        {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"tweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tweet;","C:\\gitdata\\twitter\\twitter\\src\\components\\TweetFactory.js",["58","59"],"import React from \"react\"\r\nimport  {  useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {storageService,dbService} from \"fBase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory= ({userObj})=>{\r\n\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const tweetObj = {\r\n            text: tweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const { target: { files }\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile)\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\") \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={tweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n        \r\n         {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n );\r\n};\r\nexport default TweetFactory;","C:\\gitdata\\twitter\\twitter\\src\\components\\AuthForm.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":21,"nodeType":"66","messageId":"67","endLine":1,"endColumn":35},{"ruleId":"64","severity":1,"message":"68","line":3,"column":16,"nodeType":"66","messageId":"67","endLine":3,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":5,"column":1,"nodeType":"71","endLine":64,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":23,"column":8,"nodeType":"74","endLine":23,"endColumn":10,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":53,"column":52,"nodeType":"78","endLine":53,"endColumn":88},{"ruleId":"79","severity":1,"message":"80","line":18,"column":24,"nodeType":"81","messageId":"82","endLine":18,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":82,"column":21,"nodeType":"78","endLine":87,"endColumn":23},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'storageService' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyTweets'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [getMyTweets]",{"range":"88","text":"89"},[763,765],"[getMyTweets]"]