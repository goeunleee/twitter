{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setnewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyTweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bc3ee1e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_Auth_Domain,\r\n    projectId: process.env.REACT_APP_Project_Id,\r\n    storageBucket: process.env.REACT_APP_Storage_Bucket,\r\n    messagingSenderId: process.env.REACT_APP_Messaging_Sender_Id,\r\n    appId: process.env.REACT_APP_App_Id\r\n};\r\n firebase.initializeApp(firebaseConfig);\r\n export const firebaseInstance = firebase;\r\n export const authService = firebase.auth();\r\n export const dbService = firebase.firestore();\r\n export const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fBase\";\r\n\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setnewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const toggleAccount = () => setnewAccount((prev) => !prev);\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n        console.log(event.target.name);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    return <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                value={password}\r\n                className=\"authInput\"\r\n                onChange={onChange}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                className=\"authInput authSubmit\"\r\n                value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n\r\n    </>\r\n}\r\nexport default AuthForm","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fBase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n\r\n\r\n    const onSocialClick = async (event) => {\r\n        console.log(event.target.name);\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text: newTweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewTweet(value);\r\n    };\r\n    return (\r\n        <div className=\"tweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your tweet\"\r\n                            value={newTweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n          </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{tweetObj.text}</h4>\r\n                        {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"tweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tweet;","import React from \"react\"\r\nimport  {  useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {storageService,dbService} from \"fBase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory= ({userObj})=>{\r\n\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const tweetObj = {\r\n            text: tweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const { target: { files }\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile)\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\") \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={tweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n        \r\n         {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n );\r\n};\r\nexport default TweetFactory;","import { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Tweet from \"components/Tweet\"\r\nimport TweetFactory from \"components/TweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\r\n            const tweetArray = snapshot.docs.map(doc =>\r\n                ({ id: doc.id, ...doc.data() }))\r\n            setTweets(tweetArray)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TweetFactory userObj={userObj} />\r\n\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map((tweet) => (\r\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n\r\n    };\r\n    const getMyTweets = async () => {\r\n        const tweets = await dbService\r\n            .collection(\"tweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(tweets.docs.map((doc) => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyTweets();\r\n    }, [])\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n                Log Out\r\n      </span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navigation = ({ userObj }) =>\r\n(\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\"\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n\n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n\n  }\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj} />)\n        : \"initializing....\"}\n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}